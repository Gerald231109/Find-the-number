{"version":3,"sources":["scripts/_game.js"],"names":["Game","next","document","querySelector","description","tutorial","gridCards","querySelectorAll","countdown","countdownDiv","start","time","targetNumber","level","score","multiplier","bonusCircle","colors","cardMods","reactTrue","reactFalse","cardsGrid","gameResults","currentResult","rightAnswer","accuracy","benefit","neuron","playAgain","secs","timer","answers","rightAnswers","generationLoops","generatedValues","cardNumbers","Set","size","length","add","Math","floor","random","i","innerHTML","Array","from","forEach","checkCards","generationNums","currentLevel","Number","checkLevel","cardsGeneration","checkFinish","rightChoice","setTimeout","style","display","concat","modify","col","row","generatedCards","currentMod","classList","value","sizing","gridGap","fontSize","gridTemplateColumns","gridTemplateRows","arguments","undefined","card","console","log","insertAdjacentHTML","item","backgroundColor","targetCard","newCards","bgColor","hideReaction","bonusUp","multiplierVal","className","replace","addEventListener","e","currentTarget","slice","element","startGame","String","padStart","gameTimer","setInterval","clearInterval","prepareTutor","beforeGame"],"mappings":"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","file":"_game.f9b1ea80.js","sourceRoot":"..","sourcesContent":["const Game = function () {\n    const next = document.querySelector('.body__btn')\n    const description = document.querySelector('.game__description')\n    const tutorial = document.querySelector('.game__tutorial')\n    const gridCards = document.querySelectorAll('.grid__item')\n    const countdown = document.querySelector('.countdown__text')\n    const countdownDiv = document.querySelector('.game__countdown')\n    const start = document.querySelector('.game__start')\n    const time = document.querySelector('.time')\n    const targetNumber = document.querySelector('.start__number')\n    const level = document.querySelector('.level')\n    const score = document.querySelector('.score')\n    const multiplier = document.querySelector('.multiplier')\n    const bonusCircle = document.querySelectorAll('.info__circle')\n    const colors = ['#4cb7eb', '#6d7adb', '#a595cd', '#f28e37', '#70c09b', '#8f4af9']\n    const cardMods = ['infinite__opacity', 'infinite__rocking', 'infinite__decrease']\n    const reactTrue = document.querySelector('.reaction__true')\n    const reactFalse = document.querySelector('.reaction__false')\n    const cardsGrid = document.querySelector('.start__grid')\n\n    const gameResults = document.querySelector('.game__results')\n    const currentResult = document.querySelector('.current-result')\n    const rightAnswer = document.querySelector('.right-answer')\n    const accuracy = document.querySelector('.accuracy')\n    const benefit = document.querySelector('.benefit')\n    const neuron = document.querySelector('.neuron')\n\n    const playAgain = document.querySelector('.results__btn')\n\n\n    let secs = 3\n    let timer = 59\n    let answers = 0\n    let rightAnswers = 0\n\n\n\n    const generationLoops = function (level) {\n        const generatedValues = document.querySelectorAll('.start__item-value')\n        let cardNumbers = new Set()\n        while (cardNumbers.size !== generatedValues.length) {\n            if (level === 1) {\n                cardNumbers.add(Math.floor(Math.random()*10) + 1)\n            } else if (level === 2) {\n                cardNumbers.add(Math.floor(Math.random()*89) + 10)\n            } else if (level >= 3 && level< 7) {\n                cardNumbers.add(Math.floor(Math.random()*899) + 100)\n            } else {\n                cardNumbers.add(Math.floor(Math.random()*8999) + 1000)\n            }\n\n        }\n        for (let i = 0; i !== cardNumbers.size; i++) {\n            generatedValues[i].innerHTML = Array.from(cardNumbers)[i]\n        }\n        generatedValues.forEach((i) => {\n            checkCards(i)\n        })\n    }\n\n\n    const generationNums = function () {\n        let currentLevel = Number(level.innerHTML[0])\n        if (currentLevel === 1) {\n            generationLoops(currentLevel)\n        }\n        else if(currentLevel === 2) {\n            generationLoops(currentLevel)\n        }\n        else if (currentLevel >= 3 && currentLevel< 7) {\n            generationLoops(currentLevel)\n        }\n        else {\n            generationLoops(currentLevel)\n        }\n    }\n\n    const checkLevel = function () {\n        let currentLevel = Number(level.innerHTML[0])\n\n        if(currentLevel <= 3) {\n            cardsGeneration(3, 2, currentLevel)\n        }\n        else if(currentLevel <= 6) {\n            cardsGeneration(4, 3, currentLevel)\n        }\n        else if(currentLevel === 7) {\n            cardsGeneration(4, 4, currentLevel)\n        }\n        else if(currentLevel >= 8) {\n            cardsGeneration(5,5, currentLevel)\n        }\n    }\n\n    const checkFinish = function () {\n        if (timer === 0){\n            rightChoice()\n            setTimeout(()=>{\n                start.style.display = 'none'\n                gameResults.style.display = 'grid'\n                currentResult.innerHTML = score.innerHTML\n                rightAnswer.innerHTML = rightAnswers + ' из ' + answers\n                accuracy.innerHTML = `${Math.floor(rightAnswers*100/answers)}%`\n                benefit.innerHTML = Math.floor(Math.random()*100)\n                neuron.innerHTML = Math.floor(Math.random()*20)+40\n            }, 400)\n\n        }\n    }\n\n    const modify = function (col, row) {\n        const generatedValues = document.querySelectorAll('.start__item-value')\n        const generatedCards = document.querySelectorAll('.start__item')\n        for(let i=0; i!==col*row; i++) {\n            let currentMod = cardMods[Math.floor(Math.random()*cardMods.length)]\n            currentMod === 'infinite__rocking' ?\n                generatedValues[i].classList.value += \" \" + currentMod :\n                generatedCards[i].classList.value += \" \" + currentMod\n        }\n    }\n\n    const sizing = function (col, row, level) {\n        const generatedCards = document.querySelectorAll('.start__item')\n        if (level >= 4) {\n            if (level < 6) {\n                cardsGrid.style.gridGap = '1.5rem'\n            } else {\n                cardsGrid.style.gridGap = '1rem'\n            }\n\n            if (level < 8) {\n                generatedCards.forEach((i) => {i.style.fontSize = '3rem'})\n            } else {\n                generatedCards.forEach((i) => {i.style.fontSize = '2rem'})\n            }\n\n            modify(col, row)\n            cardsGrid.style.gridTemplateColumns = `repeat(${col}, 1fr)`\n\n            if (level < 7) {\n                cardsGrid.style.gridTemplateRows = `repeat(${row}, 6.25rem)`\n            } else if (level < 8) {\n                cardsGrid.style.gridTemplateRows = `repeat(${row}, 5.2rem)`\n            } else {\n                cardsGrid.style.gridTemplateRows = `repeat(${row}, 4.1rem)`\n            }\n        }\n    }\n\n    const cardsGeneration = function (col, row, level= 1) {\n        const cardsGrid = document.querySelector('.start__grid')\n        const card = `<div class=\"start__item\"><span class=\"start__item-value\"></span></div>`\n        cardsGrid.innerHTML = ''\n        console.log(col, row)\n        for (let i = 0; i !== col*row; i++) {\n            cardsGrid.insertAdjacentHTML('beforeend', card)\n        }\n        const generatedCards = document.querySelectorAll('.start__item')\n        sizing(col, row, level)\n        generatedCards.forEach((item) => {\n            item.style.backgroundColor = colors[Math.floor(Math.random()*colors.length)]\n        })\n        generationNums()\n\n    }\n\n    const targetCard = function () {\n        let newCards = document.querySelectorAll('.start__item-value')\n        targetNumber.innerHTML = newCards[Math.floor(Math.random()*newCards.length)].innerHTML\n    }\n\n    const bgColor = function () {\n        start.style.backgroundColor = colors[Math.floor(Math.random()*colors.length)]\n    }\n\n    const hideReaction = function () {\n        setTimeout(() => {\n            reactTrue.style.display = 'none'\n            reactFalse.style.display = 'none'\n        }, 300)\n    }\n\n    const bonusUp = function () {\n        let multiplierVal = Number(multiplier.innerHTML[1])\n        if(Number(multiplier.innerHTML[1]) < 5) {\n            multiplier.innerHTML = 'x' + (Number(multiplier.innerHTML[1]) + 1)\n            bonusCircle[multiplierVal].className = 'fa-solid fa-circle info__circle'\n        }\n    }\n\n    const newCards = function () {\n        setTimeout(() => {\n            cardsGrid.classList.replace('animation--disappearance', 'animation--appearance')\n            targetNumber.classList.replace('animation--disappearance', 'animation--appearance')\n        }, 500)\n    }\n\n    const rightChoice = function () {\n        cardsGrid.classList.replace('animation--appearance', 'animation--disappearance')\n        targetNumber.classList.replace('animation--appearance', 'animation--disappearance')\n    }\n\n\n    const checkCards = function (card) {\n        card.addEventListener('click', (e) => {\n            if (e.currentTarget.innerHTML === targetNumber.innerHTML) {\n                setTimeout(() => {\n                    newCards()\n                    checkLevel()\n                }, 300)\n                bgColor()\n                rightChoice()\n                reactTrue.style.display = 'grid'\n                rightAnswers++\n                answers++\n                hideReaction()\n                score.innerHTML = Number(score.innerHTML) + 42 * Number(multiplier.innerHTML[1])\n                level.innerHTML !== '9-9' ? level.innerHTML = (Number(level.innerHTML[0]) + 1) + '-9' : ''\n                bonusUp()\n            }\n            else {\n                answers++\n                reactFalse.style.display = 'grid'\n                hideReaction()\n                Array.from(bonusCircle).slice(1).forEach((element) => {\n                    element.className = 'fa-regular fa-circle info__circle'\n                    multiplier.innerHTML = 'x1'\n                })\n            }\n            checkFinish()\n\n        })\n        targetCard()\n    }\n\n\n\n    const startGame = function () {\n        time.innerHTML = `00:${String(timer).padStart(2, '0')}`\n        const gameTimer = setInterval(function () {\n            if (timer <= 0) {\n                countdownDiv.style.display = 'none'\n                clearInterval(gameTimer)\n            }\n            else {\n                timer--;\n                time.innerHTML = `00:${String(timer).padStart(2, '0')}`\n            }\n        }, 1000)\n        checkLevel()\n    }\n\n    const prepareTutor = function () {\n        secs = 3\n        timer = 59\n        answers = 0\n        rightAnswers = 0\n        level.innerHTML = '1-9'\n        score.innerHTML = '0'\n        cardsGrid.style = ''\n        gridCards.forEach((card) => {\n            card.style.backgroundColor = colors[Math.floor(Math.random()*colors.length)]\n        })\n        tutorial.style.display = 'grid'\n    }\n\n    next.addEventListener('click', () => {\n        description.style.display = 'none'\n        prepareTutor()\n    })\n\n    playAgain.addEventListener('click', () => {\n        gameResults.style.display = 'none'\n        prepareTutor()\n        newCards()\n    })\n\n    tutorial.addEventListener('click', () => {\n        tutorial.style.display = 'none'\n        countdownDiv.style.display = 'grid'\n        countdown.innerHTML = secs;\n        const beforeGame = setInterval(function () {\n            if (secs === 1) {\n                countdownDiv.style.display = 'none'\n                start.style.display = 'grid'\n                startGame()\n                clearInterval(beforeGame)\n            }\n            else {\n                secs--;\n                countdown.innerHTML = secs;\n            }\n        }, 1000)\n    })\n}\n\n\n\n\n"]}